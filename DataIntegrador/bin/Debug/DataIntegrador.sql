/*
Deployment script for Mosqueteros

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Mosqueteros"
:setvar DefaultFilePrefix "Mosqueteros"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 8c8d0231-36d4-423f-90b4-b8ee4aa9e22f is skipped, element [dbo].[Objetivo].[descripcion] (SqlSimpleColumn) will not be renamed to nombre';


GO
PRINT N'Rename refactoring operation with key a7a804c2-f303-4a3c-ac95-cc51a7eeabe7, 3470b1a8-4cf2-441a-966d-8182f154f472, 864624a0-5386-44c8-abf4-3da9f81e0ab0 is skipped, element [dbo].[Objetivo].[Id] (SqlSimpleColumn) will not be renamed to Codigo';


GO
PRINT N'Rename refactoring operation with key 2defa11b-7192-4c9f-875d-99cd65197f42 is skipped, element [dbo].[Objetivo].[descripcion] (SqlSimpleColumn) will not be renamed to Descripcion';


GO
PRINT N'Rename refactoring operation with key 94ec0259-48b6-4489-8acc-8aa7a82ffd97 is skipped, element [dbo].[Objetivo].[nombre] (SqlSimpleColumn) will not be renamed to Nombre';


GO
PRINT N'Rename refactoring operation with key 1eac50c7-8604-43b2-923f-d3bc85927586 is skipped, element [dbo].[Tipo_Objetivo].[Id] (SqlSimpleColumn) will not be renamed to Nombre';


GO
PRINT N'Rename refactoring operation with key a4e45334-efb5-4b2a-9119-b5a53d8b0502 is skipped, element [dbo].[Compuesto_Por].[Id] (SqlSimpleColumn) will not be renamed to Codigo_Plan';


GO
PRINT N'Creating [dbo].[Compuesto_Por]...';


GO
CREATE TABLE [dbo].[Compuesto_Por] (
    [Codigo_Plan] INT NOT NULL,
    [Codigo_Obj]  INT NOT NULL
);


GO
PRINT N'Creating [dbo].[Objetivo]...';


GO
CREATE TABLE [dbo].[Objetivo] (
    [Codigo]      INT           NOT NULL,
    [Nombre]      NVARCHAR (50) NULL,
    [Descripcion] NVARCHAR (50) NULL,
    [Tipo_O]      NVARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([Codigo] ASC)
);


GO
PRINT N'Creating [dbo].[Tipo_Objetivo]...';


GO
CREATE TABLE [dbo].[Tipo_Objetivo] (
    [Nombre] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([Nombre] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Compuesto_Por]...';


GO
ALTER TABLE [dbo].[Compuesto_Por] WITH NOCHECK
    ADD FOREIGN KEY ([Codigo_Plan]) REFERENCES [dbo].[Objetivo] ([Codigo]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a7a804c2-f303-4a3c-ac95-cc51a7eeabe7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a7a804c2-f303-4a3c-ac95-cc51a7eeabe7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3470b1a8-4cf2-441a-966d-8182f154f472')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3470b1a8-4cf2-441a-966d-8182f154f472')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8c8d0231-36d4-423f-90b4-b8ee4aa9e22f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8c8d0231-36d4-423f-90b4-b8ee4aa9e22f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2defa11b-7192-4c9f-875d-99cd65197f42')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2defa11b-7192-4c9f-875d-99cd65197f42')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '94ec0259-48b6-4489-8acc-8aa7a82ffd97')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('94ec0259-48b6-4489-8acc-8aa7a82ffd97')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '864624a0-5386-44c8-abf4-3da9f81e0ab0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('864624a0-5386-44c8-abf4-3da9f81e0ab0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1eac50c7-8604-43b2-923f-d3bc85927586')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1eac50c7-8604-43b2-923f-d3bc85927586')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a4e45334-efb5-4b2a-9119-b5a53d8b0502')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a4e45334-efb5-4b2a-9119-b5a53d8b0502')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Compuesto_Por'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
