/*
Deployment script for Mosqueteros

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Mosqueteros"
:setvar DefaultFilePrefix "Mosqueteros"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Compuesto_Por]...';


GO
ALTER TABLE [dbo].[Compuesto_Por] DROP CONSTRAINT [FK__Compuesto__Codig__1FCDBCEB];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Compuesto_Por]...';


GO
ALTER TABLE [dbo].[Compuesto_Por] DROP CONSTRAINT [FK__Compuesto__Codig__20C1E124];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Objetivo]...';


GO
ALTER TABLE [dbo].[Objetivo] DROP CONSTRAINT [FK__Objetivo__Tipo_O__21B6055D];


GO
PRINT N'Starting rebuilding table [dbo].[Compuesto_Por]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Compuesto_Por] (
    [Codigo_Plan] INT NOT NULL,
    [Codigo_Obj]  INT NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Compuesto_Por])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Compuesto_Por] ([Codigo_Obj], [Codigo_Plan])
        SELECT [Codigo_Obj],
               [Codigo_Plan]
        FROM   [dbo].[Compuesto_Por];
    END

DROP TABLE [dbo].[Compuesto_Por];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Compuesto_Por]', N'Compuesto_Por';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Objetivo]...';


GO
ALTER TABLE [dbo].[Objetivo] ALTER COLUMN [Descripcion] NVARCHAR (50) NULL;

ALTER TABLE [dbo].[Objetivo] ALTER COLUMN [Tipo_O] NVARCHAR (20) NULL;


GO
PRINT N'Creating unnamed constraint on [dbo].[Compuesto_Por]...';


GO
ALTER TABLE [dbo].[Compuesto_Por] WITH NOCHECK
    ADD FOREIGN KEY ([Codigo_Obj]) REFERENCES [dbo].[Objetivo] ([Codigo]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Compuesto_Por]...';


GO
ALTER TABLE [dbo].[Compuesto_Por] WITH NOCHECK
    ADD FOREIGN KEY ([Codigo_Plan]) REFERENCES [dbo].[PlanMejora] ([Codigo]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Objetivo]...';


GO
ALTER TABLE [dbo].[Objetivo] WITH NOCHECK
    ADD FOREIGN KEY ([Tipo_O]) REFERENCES [dbo].[Tipo_Objetivo] ([Nombre]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

INSERT INTO Tipo_Objetivo(Nombre) VALUES ('Profesor');INSERT INTO Tipo_Objetivo(Nombre) VALUES ('Curso');GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Compuesto_Por'), OBJECT_ID(N'dbo.Objetivo'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
