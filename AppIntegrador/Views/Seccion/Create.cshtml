@model AppIntegrador.Models.CrearSeccionModel

@{
    ViewBag.Title = "Crear sección";
}

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <table class="table">
        <tr>
            <td style="width:40%">
                <h2>Crear Sección</h2>
                <hr />
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Seccion.Codigo, "Código", htmlAttributes: new { @class = "control-label required col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Seccion.Codigo, new
                            {
                                htmlAttributes = new
                                {
                                    @class = "form-control",
                                    id = "textCode",
                                    name = "textCode",
                                    @maxlength = "8",
                                    required = "required",
                                    placeholder = "Código",
                                    rows = "5",
                                    @onkeyup = "contarCaracteres(this)"
                                }
                            })
                            <div class="contador small pull-right">0/8 caracteres usados</div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Seccion.Nombre, htmlAttributes: new { @class = "control-label required col-md-2" })
                        <div class="col-md-10">
                            <form accept-charset="UTF-8" action="" method="POST">
                                @Html.EditorFor(model => model.Seccion.Nombre, new
                                {
                                    htmlAttributes = new
                                    {
                                        @class = "form-control",
                                        id = "textName",
                                        name = "textName",
                                        @maxlength = "250",
                                        required = "required",
                                        placeholder = "Nombre del formulario",
                                        rows = "5",
                                        @onkeyup = "contarCaracteres(this)"
                                    }
                                })

                                <div class="contador small pull-right">0/250 caracteres usados</div>
                            </form>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-success" id="Create" data-toggle="modal" data-target="#myModal" />
                            @Html.ActionLink("Cancelar", "Create", "Controller", new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            </td>



            <td style="width:60%">
                @Html.Partial("/Views/PreguntaConOpcionesDeSeleccion/_IndexPartial.cshtml", Model.pregunta_Con_Opciones_De_Seleccion)

            </td>
        </tr>
    </table>
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Formularios/AgregarPreguntas.js"></script>
    <script src="~/Scripts/Formularios/ContadorCaracteres.js"></script>

    <script>
        $(document).ready(function () {
            agregarPreguntas.init();
            $("#codigotext").attr("disabled", "disabled");
            if ($("input[name=optradio]:checked").val() == "codigoinput") {
                $("#EnterRange").click(function () {
                    $("#codigotext").removeAttr("disabled");
                });
            }
            $('#dtBasicExample').DataTable({
                "ordering": false // false to disable sorting (or any other option)
            });
            $('.dataTables_length').addClass('bs-select');
        });
    </script>

    @*
        Historia RIP-BKS1
        Se movieron los scripts de la vista parcial a esta vista, porque las vistas
        parciales no pueden tener sus propias secciones (de acuerdo a lo que encontramos).
    *@
    <script type="text/javascript">
        var currentEnabled = null;
        function enableElement(elem) {
            console.log(elem.name);
            if (currentEnabled) {
                currentEnabled.disabled = true;
            }
            elem.disabled = false;
            currentEnabled = elem;
        }
    </script>

    <script type="text/javascript">
        function toggleTextbox(opt) {
            if (opt == 'txtText') {
                var txtPassportNumber = document.getElementById('txtText');
                txtJustificationNumber.disabled = opt.checked ? false : true;
                if (!txtJustificationNumber.disabled) {
                    txtJustificationNumber.focus();
                }
            }

        }

    </script>
}
