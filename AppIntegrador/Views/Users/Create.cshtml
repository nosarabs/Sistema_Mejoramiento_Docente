@model AppIntegrador.Models.Persona

@{
    ViewBag.Title = "Crear un nuevo usuario";
}

<div class="container">
    <h2>Crear un nuevo usuario</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Persona</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label required col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CorreoAlt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CorreoAlt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CorreoAlt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TipoIdentificacion, htmlAttributes: new { @class = "control-label required col-md-2" })
        <div class="col-md-10">
            <!--Story TAM-2.2: combobox to select the id type when creating an user.-->
            <select id="TipoIdentificacion" name="TipoIdentificacion">
                <option value="Cedula">Cédula</option>
                <option value="Pasaporte">Pasaporte</option>
                <option value="Residencia">Número de residencia</option>
            </select>
           
            @Html.ValidationMessageFor(model => model.TipoIdentificacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Identificacion, htmlAttributes: new { @class = "control-label required col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Identificacion, new { htmlAttributes = new { @class = "form-control", required = "required"} })
            @Html.ValidationMessageFor(model => model.Identificacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre1, htmlAttributes: new { @class = "control-label required col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre1, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.Nombre1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Apellido1, htmlAttributes: new { @class = "control-label required col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellido1, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellido2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Estudiante.Carne, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Estudiante.Carne, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Estudiante.Carne, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear usuario" class="btn btn-success" />
            @Html.ActionLink("Cancelar", "Index", "Index", new { @class = "btn btn-danger" })
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Atrás", "Index", "Index", new { @class = "btn btn-default"})
    </div>
</div>

<style>
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

<script>
    function validateIdField()
    {
        var enteredId = document.getElementById("Identificacion");
        var selectedType = document.getElementById("TipoIdentificacion");

        switch (selectedType.value) {
            case "Cedula": alert('Usted selecciono cédula');
                break;
            case "Pasaporte": alert('Usted seleccionó pasaporte' + enteredId.value);
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
