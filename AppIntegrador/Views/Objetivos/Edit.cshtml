@model AppIntegrador.Models.Objetivo

@{
    ViewBag.Title = "Edit";
    Layout = null;
}

<div class="modal-body">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <h4>Objetivo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.codPlan)
        @Html.HiddenFor(model => model.nombre)

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">

                    <div class="row">
                        <div class="col-md-8">

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.codPlan, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.codPlan, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.codPlan, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.nombTipoObj, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        <div class="col-md-8">
                            @Html.DropDownList("nombTipoObj", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.nombTipoObj, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.fechaFin, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.fechaFin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fechaFin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", maxlength = "50", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", rows = "4", maxlength = "250", style = "resize:vertical", placeholder = "Máximo 250 caracteres" })
                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">


                @*
                    Modificado por: Johan Córdoba
                    Historia a la que pertenece: MOS-1.2 "agregar, modificar, borrar y consultar los objetivos de un plan de mejora"
                    Cambio la funcionalidad del boton para que no refresque toda la vista
                    y solo cierre el modal. Además esto tambien permite que en las vistas parciales
                    an cancelar la creación de un plan de mejora vuelva a esta vista y no a la de
                    index de acciones de mejora.
                *@

                <div class="botonCentrado">
                    <input type="submit" value="Guardar" class="btn btn-success" />
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    @*@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" })*@
                </div>
            </div>
        </div>

    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

</div>
