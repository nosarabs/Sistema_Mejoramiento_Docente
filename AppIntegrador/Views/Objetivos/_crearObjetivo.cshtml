@model AppIntegrador.Models.Objetivo

@{
    ViewBag.Title = "Create";
    Layout = null;
}

<div class="modal-body">
    <div class="alert alert-warning">
        <span class="glyphicon glyphicon-warning-sign"></span>
        El nombre es obligatorio.
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @*<div class="form-horizontal">*@
        <h4>Creación de objetivo @ViewBag.id @ViewData["nombre"]</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    @*@Html.LabelFor(model => model.codPlan, htmlAttributes: new { @class = "control-label"})*@
                    <div class="row">
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.codPlan, new { style = "display:none;", @Value = ViewBag.id })
                            @Html.ValidationMessageFor(model => model.codPlan, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>  

        <div class="form-group">
            <div class="row">

                <div class="col-md-4">
                    @Html.LabelFor(model => model.nombTipoObj, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        <div class="col-md-12">
                            @Html.DropDownList("nombTipoObj", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.nombTipoObj, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    @Html.LabelFor(model => model.fechaFin, htmlAttributes: new { @class = "control-label" })
                    <div class="row">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.fechaFin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fechaFin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", maxlength = "50", placeholder = "Máximo 50 caracteres", @onkeyup = "crearObjetivoVal()" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", rows = "4", maxlength = "250", style = "resize:vertical", placeholder = "Máximo 250 caracteres" })
                    @*@Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        /*
            Modificado por: Johan Córdoba
            Historia a la que pertenece: MOS-1.2 "agregar, modificar, borrar y consultar los objetivos de un plan de mejora"
            Cambio la funcionalidad del boton para que no refresque toda la vista 
            y solo cierre el modal. Además esto tambien permite que en las vistas parciales
            an cancelar la creación de un plan de mejora vuelva a esta vista y no a la de 
            index de acciones de mejora.
         
        */
        <div class="form-group">
            <div class="row">
                <div class="botonCentrado">
                    <input type="submit" id="crearObjetivo" value="Crear" class="btn btn-success" disabled="disabled"/>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    @*@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-danger" })*@
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.codPlan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codPlan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codPlan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaFin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaFin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaFin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombTipoObj, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("nombTipoObj", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nombTipoObj, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codPlantilla, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("codPlantilla", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codPlantilla, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="success" value="Create" class="btn btn-success" />
            </div>
        </div>*@
        @*</div>*@
    }
</div>