@model AppIntegrador.Models.Pregunta_con_opciones_de_seleccion

@{
    ViewBag.Title = "Create";
}

@*Historia de usuario: ISU
    Yo como Administrativo quier uniformidad en la interfaz de creación de pregunta de selección única
    para que sea agradable a la vista.

    Se realiza agrupaciones de elementos para dar una comunicación fluida entre el sistema y el usuario.
    Se crean diferentes niveles de importancia.
    Se establece colores de botones.
    Mejor distribución del espacio.
*@
<div class="container">

    <h1>Banco de preguntas</h1>
    @* Primer contenidor, envuelve todos los elementos de crear pregunta *@
    <div class=" card card-default">
        <div class="card-body test3">
            <h3>Crear pregunta de Selección Única</h3>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                // segundo contenedor, envuelve los elementos principales de una pregunta, código, enunciado y justificación
                <div class="form-horizontal card-group ">
                    <div class=" card card-default test2">
                        <div class="card-body">
                            <div class="row">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-sm-2">
                                    @Html.EditorFor(model => model.Codigo, new
                                   {
                                       htmlAttributes = new
                                       {
                                           @class = "validar form-control",
                                           @maxlength = "8",
                                           required = "required",
                                           @onkeyup = "contarCaracteres(this)",
                                           @placeholder = "Código"
                                       }
                                   })

                                    <div class="contador small float-right">0/8 caracteres usados</div>
                                    @*Historia MSU: que el mensaje de error salga en rojo*@
                                    @Html.ValidationMessageFor(model => model.Codigo, "", new { @style = "color:red" })
                                </div>

                                <div class="col-lg-10">
                                    @Html.TextAreaFor(model => model.Pregunta_con_opciones.Pregunta.Enunciado, new
                                    {
                                        @class = "validar form-control long-textbox",
                                        @style = "width: 100%;max-width: 100%",
                                        @maxlength = "250",
                                        required = "required",
                                        data_val = "true",
                                        data_val_length_max = "250",
                                        @onkeyup = "contarCaracteres(this)",
                                        @placeholder = "Enunciado de la pregunta"
                                    })

                                    <div class="contador small float-right">0/250 caracteres usados</div>
                                    @*Historia MSU: que el mensaje de error salga en rojo*@
                                    @Html.ValidationMessageFor(model => model.Pregunta_con_opciones.Pregunta.Enunciado, "", new { @style = "color:red" })
                                </div>
                            </div>

                            <br />
                            <div>
                                <input type="checkbox" class="float-left" name="showField" id="showField" value="yes" onchange="myFunction()" onclick="EnableDisableTextBox(this)">
                                <label for="showField" class="col-lg-10">
                                    Incluir campo de justificación para la pregunta.
                                </label>
                            </div>
                            

                            <div class="form-group" id="justificationField">
                                <div class="col-lg-12">
                                    @Html.EditorFor(model => model.Pregunta_con_opciones.TituloCampoObservacion, new
                                    {
                                        htmlAttributes = new
                                        {
                                            @class = "validar-opc form-control",
                                            required = "required",
                                            id = "txtJustificationNumber",
                                            @maxlength = "50",
                                            @placeholder = "Descripción",
                                            @onkeyup = "contarCaracteres(this)"
                                        }
                                    })
                                    <div class="contador small float-right">0/50 caracteres usados</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="form-horizontal">

                    @* Tercer contenidor, envuelve los elementos de las opciones de las preguntas. Con un color de fondo
                        diferente para dar difernte importancia.*@
                    <div class="card-group">
                        <div class="card">
                            <div class="card-body test">
                                <div id="sortable">
                                </div>
                                <div class="custom-control custom-radio control-label col-sm-1 form-horizontal">
                                </div>
                                <br/>
                                <div class="test col-sm-6">
                                    <input type="button" class="btn btn-outline-light text-dark bg-white border-secondary" value="Agregar opción +" id="Add" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        <div class="col-lg-offset-2 col-lg-10">
                            <input type="submit" value="Crear" class="btn btn-info" id="Create" />
                            @Html.ActionLink("Cancelar", "Create", "Controller", new { @class = "btn btn-outline-light text-dark bg-white border-secondary" })
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>
</div>

@* Estilos espeficos de la página de crear preguntas.*@
<style>
    .orden {
        display: none;
    }

    .sortable-container:hover {
        background-color: lightgrey;
        cursor: grab;
    }

    .sortable-container:active {
        background-color: #c4c4c4;
        cursor: grabbing;
    }

    .test {
        background: #e9e9e9;
    }

    .test2 {
        background: #fbfbfb;
    }

    .test3 {
        background: #fdfdfd;
    }

    input[type="radio"] {
        transform: scale(2);
        margin-left: 10px;
    }

    .btn-info {
        color: #fff;
        background-color: #41ade7;
    }
</style>

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert-dev.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" />

    @Scripts.Render("~/bundles/jqueryval")

    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/Scripts/creacionpregunta.js"></script>
    <script src="~/Scripts/Formularios/ContadorCaracteres.js"></script>
    <script src="~/Scripts/Formularios/CrearPreguntas.js"></script>
    <script src="~/Scripts/Formularios/DesactivarBotonCrear.js"></script>

    <script>
        $("#sortable").disableSelection();

        // When a new option is added, fix the index (not very efficient)
        $("#Add").click(function () {
            var i = fixIndexes();
            $.ajax({
                url: 'OpcionesDeSeleccion',
                data: { i: i },
                success: function (data) {
                    $(data).appendTo('#sortable').height(0).animate({ 'height': 75 }, 200);
                    $("#sortable").find(".texto").focus();
                    disableRemoveButton();
                    $('#Create').prop('disabled', true);
                }
            })

        });

        $(document).ready(function () {
            validarEntradas();
            var msg = '@ViewBag.Message';
            if (msg && msg.length > 0) {
                pregunta();
            }
            $("#Add").trigger('click');
        });

        // Hide the text input box in default
        $('#justificationField').css('display', 'none');

    </script>

    <script type="text/javascript">
        function EnableDisableTextBox(justificationField) {
            var txtPassportNumber = document.getElementById("txtJustificationNumber");
            txtJustificationNumber.disabled = justificationField.checked ? false : true;
            if (!txtJustificationNumber.disabled) {
                txtJustificationNumber.focus();
            }
            validarEntradas();
        }
    </script>
}
