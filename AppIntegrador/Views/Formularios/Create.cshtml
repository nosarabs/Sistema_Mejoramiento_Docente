@model AppIntegrador.Models.CrearFormularioModel

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <table class="table">
        <tbody>
            <tr>
                <td>
                    <div class="form-row panel-group">

                        <div class="panel panel-default">

                            <div class="panel-body test2">
                                <h2>Crear Formulario</h2>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(model => model.Formulario.Codigo, "Código", htmlAttributes: new { @class = "control-label required col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.Formulario.Codigo, new
                                   {
                                       htmlAttributes = new
                                       {
                                           @class = "validar form-control",
                                           id = "textCode",
                                           name = "textCode",
                                           @maxlength = "8",
                                           required = "required",
                                           placeholder = "Código",
                                           rows = "5",
                                           @onkeyup = "contarCaracteres(this)"
                                       }
                                   })
                                        <div class="contador small pull-right">0/8 caracteres usados</div>
                                        @Html.ValidationMessageFor(model => model.Formulario.Codigo, "", new { @style = "color:red" })
                                    </div>
                                </div>

                                <div class="form-group col-md-8">
                                    @Html.LabelFor(model => model.Formulario.Nombre, htmlAttributes: new { @class = "control-label required col-md-2" })
                                    <div class="col-md-11">
                                        <form accept-charset="UTF-8" action="" method="POST">
                                            @Html.EditorFor(model => model.Formulario.Nombre, new
                                       {
                                           htmlAttributes = new
                                           {
                                               @class = "validar form-control",
                                               id = "textName",
                                               name = "textName",
                                               @maxlength = "250",
                                               required = "required",
                                               placeholder = "Nombre del formulario",
                                               rows = "5",
                                               @onkeyup = "contarCaracteres(this)"
                                           }
                                       })
                                            <div class="contador small pull-right">0/250 caracteres usados</div>
                                            @Html.ValidationMessageFor(model => model.Formulario.Nombre, "", new { @style = "color:red" })
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="panel panel-default">
                        <div class="panel-body test2">
                            <h2>Secciones del formulario</h2>
                            <hr />
                            <div class="form-group col-md-12">
                                 @Html.Partial("/Views/Formularios/_SeccionesActualesPartial.cshtml", Model.seccion)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-10">
                                <input type="button" value="Agregar sección al formulario" class="btn btn-info" id="AgregarSeccion" data-toggle="modal" data-target="#exampleModal" />
                            </div>
                        </div>
                        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        @Html.Partial("/Views/Seccion/_SeccionPartial.cshtml", Model.seccion)
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                        <button type="button" class="btn btn-primary " onclick="addSeccionToFormulario()"  data-dismiss="modal">Agregar secciones</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
            </tr>

            <tr>
                <td>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear" class="btn btn-info" id="Create" />
                            @Html.ActionLink("Cancelar", "Create", "Controller", new { @class = "btn btn-default" })
                        </div>
                    </div>
                </td>

            </tr>
        </tbody>

    </table>


}


<style>

    .btn-info {
        color: #fff;
        background-color: #41ade7;
    }

    .btn-primary {
        background-color: #f0f0f0;
        color: black;
        border-color: #a2a6aa;
    }

    .grisUCR2 {
        background: #fbfbfb;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }

    .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr > td {
        padding: 3%;
    }

    .btn {
        /* just for this demo. */
        margin-top: 5px;
    }

    .btn-arrow-right,
    .btn-arrow-left {
        position: relative;
        padding-left: 13px;
        padding-right: 18px;
        background-color: #f0f0f0;
        border-color: #a2a6aa;
    }

    .btn-arrow-right {
        padding-left: 20px;
    }

    .btn-arrow-left {
        padding-right: 10px;
    }

    .grisUCR1 {
        background: #e9e9e9;
    }

    .btn-arrow-right:before,
    .btn-arrow-right:after,
    .btn-arrow-left:before {
        /* make two squares (before and after), looking similar to the button */
        content: "";
        position: absolute;
        top: 5px;
        /* move it down because of rounded corners */
        width: 22px;
        /* same as height */
        height: 22px;
        /* button_outer_height / sqrt(2) */
        background: inherit;
        /* use parent background */
        border: inherit;
        /* use parent border */
        border-left-color: transparent;
        /* hide left border */
        border-bottom-color: transparent;
        /* hide bottom border */
        border-radius: 0px 4px 0px 0px;
        /* round arrow corner, the shorthand property doesn't accept "inherit" so it is set to 4px */
        -webkit-border-radius: 0px 4px 0px 0px;
        -moz-border-radius: 0px 4px 0px 0px;
    }

    .btn-arrow-right:before,
    .btn-arrow-right:after {
        transform: rotate(45deg);
        /* rotate right arrow squares 45 deg to point right */
        -webkit-transform: rotate(45deg);
        -moz-transform: rotate(45deg);
        -o-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
    }

    .btn-arrow-left:before,
    .btn-arrow-left:after {
        transform: rotate(225deg);
        /* rotate left arrow squares 225 deg to point left */
        -webkit-transform: rotate(225deg);
        -moz-transform: rotate(225deg);
        -o-transform: rotate(225deg);
        -ms-transform: rotate(225deg);
    }

    .btn-arrow-right:before,
    .btn-arrow-left:before {
        /* align the "before" square to the left */
        left: -11px;
    }

    .btn-arrow-right:after,
    .btn-arrow-left:after {
        /* align the "after" square to the right */
        right: -11px;
    }

    .btn-arrow-right:after,
    .btn-arrow-left:before {
        /* bring arrow pointers to front */
        z-index: 1;
    }

    .btn-arrow-right:before,
    .btn-arrow-left:after {
        /* hide arrow tails background */
        background-color: white;
    }
</style>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Formularios/ContadorCaracteres.js"></script>
    <script src="~/Scripts/Formularios/agregarsecciones.js"></script>
    <script src="~/Scripts/Formularios/DesactivarBotonCrear.js"></script>
    <script>
        $(function () {
            $('#myModal').on('show.bs.modal', function () {
                var myModal = $(this);
                clearTimeout(myModal.data('hideInterval'));
                myModal.data('hideInterval', setTimeout(function () {
                    myModal.modal('hide');
                }, 3000));
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            agregarsecciones.init();
        });
    </script>

    <script>
        $(function () {
            var includes = $('[data-include]');
            jQuery.each(includes, function () {
                var file = 'views/' + $(this).data('include') + '.html';
                $(this).load(file);
            });
        });
    </script>

    <script>
        function pregunta() {
            swal({
                title: "Pregunta creada con éxito!",
                text: "Puede ser vista en el banco de preguntas",
                type: "success",
                showConfirmButton: true
            },
                function () {
                    window.location.href = "Create";
                });
        }

        $(document).ready(function () {
            validarEntradas();
            var msg = '@ViewBag.Message';
            if (msg && msg.length > 0) {
                pregunta();
            }
            $("#Add").trigger('click');
        });
    </script>




    <script type="text/javascript">
        var currentEnabled = null;
        function enableElement(elem) {
            if (currentEnabled) {
                currentEnabled.disabled = true;
            }
            elem.disabled = false;
            currentEnabled = elem;
        }
    </script>

    <link href="https://unpkg.com/bootstrap-table@1.15.4/dist/bootstrap-table.min.css" rel="stylesheet">

    <script src="https://unpkg.com/bootstrap-table@1.15.4/dist/bootstrap-table.min.js"></script>

    <script src="https://unpkg.com/bootstrap-table@1.15.4/dist/bootstrap-table.min.js"></script>

}