@{
    ViewBag.Title = "Index";
}

@Scripts.Render("~/Scripts/jquery-3.4.1.js")
@* Datapicker *@


@Scripts.Render("~/Scripts/bootstrap.min.js")
@Scripts.Render("~/Scripts/Visualizacion/bootstrap-multiselect.js")

@Scripts.Render("~/Scripts/Formularios/filtrosAsignacion.js")

@Styles.Render("~/Content/Visualizacion/bootstrap.min.css")
@Styles.Render("~/Content/Visualizacion/bootstrap-multiselect.css")



<head>
    <meta charset="UTF-8" , name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>
    <div class="container">
        <div class="card card-body shadow">
            <h3>Asignación de formulario</h3>
            <h2 id="encabezado" class="text-center">@ViewBag.Codigo | @ViewBag.Nombre</h2>
            <div class="card-body grisUCR2">
                @using (Html.BeginForm("Asignar", "AsignacionFormularios", FormMethod.Post))
                {

                    <div class="row">
                        <div class="form-group col-lg-6" id="panelFiltros">
                        </div>
                        @*<div class="form-group">
                                 Date input
                                <label class="control-label" for="date">Date</label>
                                <input data-date-inline-picker="true" class="form-control" id="date" name="date" placeholder="MM/DD/YYY" type="text" />
                            </div>*@

                    <div class="form-group col-lg-offset-5">
                        <form class="form-inline">
                            <h5>Fecha de inicio</h5>
                            <div class="form-group ">
                                <label for="date" class="sr-only"></label>
                                <input type="date" data-date-inline-picker="true" class="form-control" id="fecha-inicio" />
                                <hr>
                                <h5>Fecha finalización</h5>
                                <label for="date" class="sr-only"></label>
                                <input type="date" data-date-inline-picker="true" class="form-control" id="fecha-fin" />
                                <hr>
                            </div>
                        </form>
                        <div class="float-right">
                            Notificar a los estudiantes por correo
                             <input type="checkbox" id="enviarCorreos" />
                        </div>
                    </div>
                    </div>


                    <div class="form-group float-right">
                        <div>
                            @*Mensaje final de creación de sección*@
                            <input type="button" value="Asignar formulario" class="btn-azulUCR" onclick="test()" />
                            @Html.ActionLink("Cancelar", "Create", "Controller", new { @class = "btn-blancoUCR" })
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" aria-hidden="true" id="modal-solapado">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Confirmar cambio</h4>
                </div>
                <div class="modal-body">
                    Las fechas asignadas entran en conflicto. Este formulario está asignado en las siguientes fechas: <br />
                    <strong>Fecha de inicio: </strong><div id="periodo-og-inicio"></div><br />
                    <strong>Fecha de finalización: </strong><div id="periodo-og-fin"></div><br />

                    ¿Desea combinar las fechas formando un nuevo intervalo de tamaño máximo?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-azulUCR" id="solapado-si">Combinar</button>
                    <button type="button" class="btn-blancoUCR" id="solapado-no">Volver</button>
                </div>
            </div>
        </div>
    </div>

</body>


@* Datapicker *@



<!-- Bootstrap Date-Picker Plugin -->
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/js/bootstrap-datepicker.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css" />

@* Código para levantar el modal cuando se solapa una fecha *@
<script>
    var modalConfirm = function (callback) {

        $("#solapado-si").on("click", function () {
            callback(true);
            $("#modal-solapado").modal('hide');
        });

        $("#solapado-no").on("click", function () {
            callback(false);
            $("#modal-solapado").modal('hide');
        });
    };

    modalConfirm(function (confirm) {
        if (confirm) {
            filtros.asignarConFiltros(null, null, null, '@ViewBag.Codigo', true);
        } 
    });


</script>

<script>
    $(document).ready(function () {
        var date_input = $('input[name="date"]'); //our date input has the name "date"
        var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";
        var options = {
            format: 'mm/dd/yyyy',
            container: container,
            todayHighlight: true,
            autoclose: true,
        };
        date_input.datepicker(options);
    })
</script>

<script>

    var filtros = new FiltrosAsignacion();
    filtros.crearFiltros();

</script>
<script>
    /*
No es tan complicado, solo deben importar el JS con el idioma español y despues le indican al datepicker que usaran ese idioma.
*/

    $('#datepicker').datepicker({
        uiLibrary: 'bootstrap4',
        locale: 'es-es',
    });
</script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>

<script>


    function test() {
        var codigo = '@ViewBag.Codigo';
        console.log(codigo);
        filtros.asignarConFiltros(null, null, null, codigo, false);

    }
    //Actualiza los filtros por debajo del de unidades académicas
    function actualizarDebajoUA() {

        var unidadesAcademicas = filtros.recuperarUnidadesAcademicas();

        filtros.llenarFiltroCE(unidadesAcademicas, null, null);
        filtros.llenarFiltroG(unidadesAcademicas, null, null);
        filtros.llenarFiltroP(unidadesAcademicas, null, null);
        filtros.llenarFiltroF(unidadesAcademicas, null, null, null);

        //Limpia el panel de la vista parcial
        $('#panelDashboard').html("");

        this.actualizarPromedios(unidadesAcademicas, null, null, null);

    }

    //Actualiza los filtros por debajo del de carreras y énfasis
    function actualizarDebajoCE() {

        var unidadesAcademicas = filtros.recuperarUnidadesAcademicas();
        var carrerasEnfasis = filtros.recuperarCarrerasEnfasis();

        filtros.llenarFiltroG(unidadesAcademicas, carrerasEnfasis, null);
        filtros.llenarFiltroP(unidadesAcademicas, carrerasEnfasis, null);
        filtros.llenarFiltroF(unidadesAcademicas, carrerasEnfasis, null, null);

        //Limpia el panel de la vista parcial
        $('#panelDashboard').html("");

        this.actualizarPromedios(unidadesAcademicas, carrerasEnfasis, null, null);

    }

    //Actualiza los filtros por debajo del de grupos
    function actualizarDebajoG() {

        var unidadesAcademicas = filtros.recuperarUnidadesAcademicas();
        var carrerasEnfasis = filtros.recuperarCarrerasEnfasis();
        var grupos = filtros.recuperarGrupos();

        filtros.llenarFiltroP(unidadesAcademicas, carrerasEnfasis, grupos);
        filtros.llenarFiltroF(unidadesAcademicas, carrerasEnfasis,grupos, null);

        //Limpia el panel de la vista parcial
        $('#panelDashboard').html("");

        this.actualizarPromedios(unidadesAcademicas, carrerasEnfasis,grupos, null);

    }

    //Actualiza los filtros por debajo del de profesores
    function actualizarDebajoP() {

        var unidadesAcademicas = filtros.recuperarUnidadesAcademicas();
        var carrerasEnfasis = filtros.recuperarCarrerasEnfasis();
        var grupos = filtros.recuperarGrupos();
        var profesores = filtros.recuperarProfesores();

        filtros.llenarFiltroF(unidadesAcademicas, carrerasEnfasis,grupos, profesores);

        //Limpia el panel de la vista parcial
        $('#panelDashboard').html("");

        this.actualizarPromedios(unidadesAcademicas, carrerasEnfasis,grupos, profesores);

    }

    //Esta función obtiene los parámetros del formulario seleccionado por el usuario y actualiza la vista parcial.
    function actualizarVistaParcial() {

        $('#panelDashboard').html("");
        var f = filtros.recuperarFormulario();

        if (f != null)
        {

            var codigoFormulario = f[0];
            var siglaCurso = f[2];
            var numeroGrupo = f[3];
            var semestre = f[4];
            var anno = f[5];
            var fechaInicio = f[6];
            var fechaFin = f[7];

            //Aquí se recarga la vista parcial con los parámetros del formulario.
            var link = '@Html.ActionLink(linkText: "Formulario", actionName: "Formulario", controllerName: "ResultadosFormulario", routeValues: new { codigoFormulario = "codigoFormularioValor", siglaCurso = "siglaCursoValor", numeroGrupo = "numeroGrupoValor", semestre = "semestreValor", ano = "annoValor", fechaInicio = "fechaInicioValor", fechaFin = "fechaFinValor" }, htmlAttributes: null)';
            link = link.replace('codigoFormularioValor', codigoFormulario);
            link = link.replace('siglaCursoValor', siglaCurso);
            link = link.replace('numeroGrupoValor', numeroGrupo);
            link = link.replace('semestreValor', semestre);
            link = link.replace('annoValor', anno);
            link = link.replace('fechaInicioValor', fechaInicio);
            link = link.replace('fechaFinValor', fechaFin);
            $('#panelDashboard').html(link);

        }

    }

    function actualizarPromedios(unidadesAcademicas, carrerasEnfasis, grupos, profesores) {

        var x = new GraficosDashboard();

        var profe = x.recuperarPromedioProfesor(unidadesAcademicas, carrerasEnfasis, grupos, profesores);
        var profeP = profe[0];
        var profeN = profe[1];

        var curso = x.recuperarPromedioCursos(unidadesAcademicas, carrerasEnfasis, grupos, profesores);
        var cursoP = curso[0];
        var cursoN = [1];

        $('#pP').text("Promedio profe: " + profeP);
        $('#pN').text("Cantidad: " + profeN);
        $('#cP').text("Promedio curso: " + cursoP);
        $('#cN').text("Cantidad: " + cursoN);

    }
</script>


