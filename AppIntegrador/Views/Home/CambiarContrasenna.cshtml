﻿@model AppIntegrador.Models.Usuario

@{
    ViewBag.Title = "CambiarContrasenna";
}

@Styles.Render("~/Content/users&profiles")

<div class="container p-3 border" style="background-color: #fbfbfb; width:450px">
    <div class="row">
        <div class="col">
            <h2>Cambiar Mi Contraseña</h2>
            @*@using (Html.BeginForm("CambiarContrasenna", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))*@
            @using (Html.BeginForm("CambiarContrasenna", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { onsubmit = "return validarNuevaContrasenna()" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="form-group  col-9 pl-0">
                    <label for="contrasennaActual">Contraseña Actual</label>
                    <div class="input-group" id="show_hide_password">
                        <input type="password" class="form-control" id="contrasennaActual" name="contrasennaActual" data-toggle="popover" data-placement="left" data-trigger="manual" data-title="Mayúsculas activadas" autocomplete="off" required />
                        <div class="input-group-append">
                            <div class="input-group-text"><i class="fa fa-eye toggle-password" toggle="#contrasennaActual" style="cursor:pointer" aria-hidden="true"></i></div>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-9 pl-0">
                    <label for="contrasennaNueva">Contraseña Nueva</label>
                    <div class="input-group" id="show_hide_password">
                        <input type="password" class="form-control" id="contrasennaNueva" name="contrasennaNueva" data-toggle="popover" data-placement="left" data-trigger="manual" data-title="Mayúsculas activadas" autocomplete="off" required />
                        <div class="input-group-append">
                            <div class="input-group-text"><i class="fa fa-eye toggle-password" toggle="#contrasennaNueva" style="cursor:pointer" aria-hidden="true"></i></div>
                        </div>
                    </div>

                </div>
                <div class="form-group  col-9 pl-0">
                    <label for="contrasennaConfirmar">Confirmar Contraseña</label>
                    <div class="input-group" id="show_hide_password">
                        <input type="password" class="form-control" id="contrasennaConfirmar" name="contrasennaConfirmar" data-toggle="popover" data-placement="left" data-trigger="manual" data-title="Mayúsculas activadas" autocomplete="off" required />
                        <div class="input-group-append">
                            <div class="input-group-text"><i class="fa fa-eye toggle-password" toggle="#contrasennaConfirmar" style="cursor:pointer" aria-hidden="true"></i></div>
                        </div>
                    </div>
                    <p class="text-danger" id="contrasennaConfirmarErrorJS">@Html.ValidationMessageFor(model => model.Password, "")</p>
                </div>
                <button type="submit" class="btn-azulUCR mr-3">Cambiar Contraseña</button>
                @Html.ActionLink("Cancelar", "Index", "Home", new object { }, new { @class = "btn-blancoUCR border-secondary" })

            }
        </div>
    </div>
</div>



@*//If there is a message in ViewBag.Message it displays it as an alert*@
@section Scripts
    {
    @Scripts.Render("~/bundles/custom")
    <script src="https://use.fontawesome.com/4889cf49d6.js"></script>
    @if (!string.IsNullOrEmpty(ViewBag.typeMessage))
    {


        switch (ViewBag.typeMessage)
        {
            case "alert":
                <script type="text/javascript">
                customAlert('warning','@ViewBag.NotifyMessage');;
                </script>
                break;
            case "success":
                <script type="text/javascript">
                    Swal.fire({
                        type: 'success',
                        title: '@ViewBag.NotifyTitle',
                        text: '@ViewBag.NotifyMessage',
                        allowEscapeKey: false,
                        allowOutsideClick: false
                    }).then(function(){
                        window.location.href = "/Home/Logout";
                    });
                </script>
                @*<script type="text/javascript">
                        customAlert('success','@ViewBag.NotifyMessage');
                    </script>*@
                break;
            default:
                break;
        }
    }
}


