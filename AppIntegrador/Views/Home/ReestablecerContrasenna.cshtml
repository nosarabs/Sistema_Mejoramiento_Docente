﻿@model AppIntegrador.Models.Usuario

@{
    ViewBag.Title = "ReestablecerContrasenna";
}

@Styles.Render("~/Content/users&profiles")

    <body id="greybg" class="m-0 p-0 d-flex vh-100">
        <div class="container">
            <div class="row">
                <h2 class="text-center col-12">Sistema de Mejoramiento Docente de la Universidad de Costa Rica</h2>
            </div>
            <div class="container-login100">
                <div class="row">
                    <div class="blue-box">
                        <img class="ucr-logo mb-2" src='/Content/images/logo_ucr.png' border='0' alt='logo-ucr' />
                        <h2 style="color:white;">Reestablecer mi contraseña</h2>
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        @using (Html.BeginForm("ReestablecerContrasenna", "Home", new { receivedHash = ViewBag.Hash }, FormMethod.Post, new { onsubmit = "return validarNuevaContrasenna()" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="form-group mx-1">
                                <label for="contrasennaNueva" style="color:white;font-weight:bold;">Contraseña Nueva</label>
                                <div class="input-group" id="show_hide_password">
                                    <input type="password" class="form-control" id="contrasennaNueva" name="contrasennaNueva" data-toggle="popover" data-placement="left" data-trigger="manual" data-title="Mayúsculas activadas" autocomplete="off" required />
                                    <div class="input-group-append">
                                        <div class="input-group-text"><i class="fa fa-eye toggle-password" toggle="#contrasennaNueva" style="cursor:pointer" aria-hidden="true"></i></div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group mx-1">
                                <label for="contrasennaConfirmar" style="color:white;font-weight:bold;">Confirmar Contraseña</label>
                                <div class="input-group" id="show_hide_password">
                                    <input type="password" class="form-control" id="contrasennaConfirmar" name="contrasennaConfirmar" data-toggle="popover" data-placement="left" data-trigger="manual" data-title="Mayúsculas activadas" autocomplete="off" required />
                                    <div class="input-group-append">
                                        <div class="input-group-text"><i class="fa fa-eye toggle-password" toggle="#contrasennaConfirmar" style="cursor:pointer" aria-hidden="true"></i></div>
                                    </div>
                                </div>
                                <p class="text-danger" id="contrasennaConfirmarErrorJS">@Html.ValidationMessageFor(model => model.Password, "")</p>
                            </div>
                            <button type="submit" class="btn-azulUCR mr-3">Cambiar Contraseña</button>
                            @Html.ActionLink("Cancelar", "Index", "Home", new object { }, new { @class = "btn-blancoUCR border-secondary" })
                        }
                    </div>
                </div>
            </div>
        </div>
        <footer class="flex-foot fixed-bottom">
            &copy; Universidad de Costa Rica
            <script type="text/javascript">document.write(new Date().getFullYear());</script>
        </footer>
    </body>



@*//If there is a message in ViewBag.Message it displays it as an alert*@
@section Scripts
    {
    @Scripts.Render("~/bundles/custom")
    <script src="https://use.fontawesome.com/4889cf49d6.js"></script>
    @if (!string.IsNullOrEmpty(ViewBag.typeMessage))
    {


        switch (ViewBag.typeMessage)
        {
            case "alert":
                <script type="text/javascript">
                customAlert('warning','@ViewBag.NotifyMessage');;
                </script>
                break;
            case "success":
                <script type="text/javascript">
                    Swal.fire({
                        type: 'success',
                        title: '@ViewBag.NotifyTitle',
                        text: '@ViewBag.NotifyMessage',
                        allowEscapeKey: false,
                        allowOutsideClick: false
                    }).then(function(){
                        window.location.href = "/Home/Logout";
                    });
                </script>
                @*<script type="text/javascript">
                        customAlert('success','@ViewBag.NotifyMessage');
                    </script>*@
                break;
            default:
                break;
        }
    }
}


