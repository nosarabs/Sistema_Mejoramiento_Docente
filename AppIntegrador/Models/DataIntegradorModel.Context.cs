//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppIntegrador.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataIntegradorEntities : DbContext
    {
        public DataIntegradorEntities()
            : base("name=DataIntegradorEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__RefactorLog> C__RefactorLog { get; set; }
        public virtual DbSet<Accionable> Accionable { get; set; }
        public virtual DbSet<AccionDeMejora> AccionDeMejora { get; set; }
        public virtual DbSet<Activa_por> Activa_por { get; set; }
        public virtual DbSet<Carrera> Carrera { get; set; }
        public virtual DbSet<Curso> Curso { get; set; }
        public virtual DbSet<Enfasis> Enfasis { get; set; }
        public virtual DbSet<Escalar> Escalar { get; set; }
        public virtual DbSet<Estudiante> Estudiante { get; set; }
        public virtual DbSet<Formulario> Formulario { get; set; }
        public virtual DbSet<Formulario_tiene_seccion> Formulario_tiene_seccion { get; set; }
        public virtual DbSet<Funcionario> Funcionario { get; set; }
        public virtual DbSet<Grupo> Grupo { get; set; }
        public virtual DbSet<Objetivo> Objetivo { get; set; }
        public virtual DbSet<Opciones_de_seleccion> Opciones_de_seleccion { get; set; }
        public virtual DbSet<Opciones_seleccionadas_respuesta_con_opciones> Opciones_seleccionadas_respuesta_con_opciones { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<PerfilPermiso> PerfilPermiso { get; set; }
        public virtual DbSet<Periodo_activa_por> Periodo_activa_por { get; set; }
        public virtual DbSet<Permiso> Permiso { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<PlanDeMejora> PlanDeMejora { get; set; }
        public virtual DbSet<PlantillaAccionDeMejora> PlantillaAccionDeMejora { get; set; }
        public virtual DbSet<PlantillaObjetivo> PlantillaObjetivo { get; set; }
        public virtual DbSet<Pregunta> Pregunta { get; set; }
        public virtual DbSet<Pregunta_con_opciones> Pregunta_con_opciones { get; set; }
        public virtual DbSet<Pregunta_con_opciones_de_seleccion> Pregunta_con_opciones_de_seleccion { get; set; }
        public virtual DbSet<Pregunta_con_respuesta_libre> Pregunta_con_respuesta_libre { get; set; }
        public virtual DbSet<Profesor> Profesor { get; set; }
        public virtual DbSet<Responde_respuesta_con_opciones> Responde_respuesta_con_opciones { get; set; }
        public virtual DbSet<Responde_respuesta_libre> Responde_respuesta_libre { get; set; }
        public virtual DbSet<Respuestas_a_formulario> Respuestas_a_formulario { get; set; }
        public virtual DbSet<Seccion> Seccion { get; set; }
        public virtual DbSet<Seccion_tiene_pregunta> Seccion_tiene_pregunta { get; set; }
        public virtual DbSet<Si_no_nr> Si_no_nr { get; set; }
        public virtual DbSet<TipoObjetivo> TipoObjetivo { get; set; }
        public virtual DbSet<UnidadAcademica> UnidadAcademica { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UsuarioActual> UsuarioActual { get; set; }
        public virtual DbSet<UsuarioPerfil> UsuarioPerfil { get; set; }
        public virtual DbSet<EnlaceSeguro> EnlaceSeguro { get; set; }
    
        [DbFunction("Entities", "CarrerasXPerfilXUsuario")]
        public virtual IQueryable<CarrerasXPerfilXUsuario_Result> CarrerasXPerfilXUsuario(string correoUsuario, string perfil)
        {
            var correoUsuarioParameter = correoUsuario != null ?
                new ObjectParameter("correoUsuario", correoUsuario) :
                new ObjectParameter("correoUsuario", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CarrerasXPerfilXUsuario_Result>("[Entities].[CarrerasXPerfilXUsuario](@correoUsuario, @perfil)", correoUsuarioParameter, perfilParameter);
        }
    
        [DbFunction("Entities", "EnfasisXCarrera")]
        public virtual IQueryable<EnfasisXCarrera_Result> EnfasisXCarrera(string codCarrera)
        {
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("codCarrera", codCarrera) :
                new ObjectParameter("codCarrera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EnfasisXCarrera_Result>("[Entities].[EnfasisXCarrera](@codCarrera)", codCarreraParameter);
        }
    
        [DbFunction("Entities", "EnfasisXCarreraXPerfil")]
        public virtual IQueryable<EnfasisXCarreraXPerfil_Result> EnfasisXCarreraXPerfil(string correoUsuario, string codCarrera, string nombrePerfil)
        {
            var correoUsuarioParameter = correoUsuario != null ?
                new ObjectParameter("correoUsuario", correoUsuario) :
                new ObjectParameter("correoUsuario", typeof(string));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("codCarrera", codCarrera) :
                new ObjectParameter("codCarrera", typeof(string));
    
            var nombrePerfilParameter = nombrePerfil != null ?
                new ObjectParameter("nombrePerfil", nombrePerfil) :
                new ObjectParameter("nombrePerfil", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EnfasisXCarreraXPerfil_Result>("[Entities].[EnfasisXCarreraXPerfil](@correoUsuario, @codCarrera, @nombrePerfil)", correoUsuarioParameter, codCarreraParameter, nombrePerfilParameter);
        }
    
        [DbFunction("Entities", "ObtenerRespuestaLibreGuardada")]
        public virtual IQueryable<ObtenerRespuestaLibreGuardada_Result> ObtenerRespuestaLibreGuardada(string fCodigo, string correo, string cSigla, Nullable<byte> gNumero, Nullable<int> gAnno, Nullable<byte> gSemestre, string pCodigo, string sCodigo)
        {
            var fCodigoParameter = fCodigo != null ?
                new ObjectParameter("FCodigo", fCodigo) :
                new ObjectParameter("FCodigo", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var cSiglaParameter = cSigla != null ?
                new ObjectParameter("CSigla", cSigla) :
                new ObjectParameter("CSigla", typeof(string));
    
            var gNumeroParameter = gNumero.HasValue ?
                new ObjectParameter("GNumero", gNumero) :
                new ObjectParameter("GNumero", typeof(byte));
    
            var gAnnoParameter = gAnno.HasValue ?
                new ObjectParameter("GAnno", gAnno) :
                new ObjectParameter("GAnno", typeof(int));
    
            var gSemestreParameter = gSemestre.HasValue ?
                new ObjectParameter("GSemestre", gSemestre) :
                new ObjectParameter("GSemestre", typeof(byte));
    
            var pCodigoParameter = pCodigo != null ?
                new ObjectParameter("PCodigo", pCodigo) :
                new ObjectParameter("PCodigo", typeof(string));
    
            var sCodigoParameter = sCodigo != null ?
                new ObjectParameter("SCodigo", sCodigo) :
                new ObjectParameter("SCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ObtenerRespuestaLibreGuardada_Result>("[Entities].[ObtenerRespuestaLibreGuardada](@FCodigo, @Correo, @CSigla, @GNumero, @GAnno, @GSemestre, @PCodigo, @SCodigo)", fCodigoParameter, correoParameter, cSiglaParameter, gNumeroParameter, gAnnoParameter, gSemestreParameter, pCodigoParameter, sCodigoParameter);
        }
    
        [DbFunction("Entities", "PerfilesXUsuario")]
        public virtual IQueryable<PerfilesXUsuario_Result> PerfilesXUsuario(string correoUsuario)
        {
            var correoUsuarioParameter = correoUsuario != null ?
                new ObjectParameter("correoUsuario", correoUsuario) :
                new ObjectParameter("correoUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PerfilesXUsuario_Result>("[Entities].[PerfilesXUsuario](@correoUsuario)", correoUsuarioParameter);
        }
    
        public virtual int AgregarFormulario(string codigo, string nombre)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarFormulario", codigoParameter, nombreParameter);
        }
    
        public virtual int AgregarOpcion(string cod, Nullable<byte> orden, string texto)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("orden", orden) :
                new ObjectParameter("orden", typeof(byte));
    
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarOpcion", codParameter, ordenParameter, textoParameter);
        }
    
        public virtual int AgregarPerfilPermiso(string perfil, Nullable<int> idPermiso, string codCarrera, string codEnfasis, Nullable<bool> tienePermiso)
        {
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var idPermisoParameter = idPermiso.HasValue ?
                new ObjectParameter("idPermiso", idPermiso) :
                new ObjectParameter("idPermiso", typeof(int));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("codCarrera", codCarrera) :
                new ObjectParameter("codCarrera", typeof(string));
    
            var codEnfasisParameter = codEnfasis != null ?
                new ObjectParameter("codEnfasis", codEnfasis) :
                new ObjectParameter("codEnfasis", typeof(string));
    
            var tienePermisoParameter = tienePermiso.HasValue ?
                new ObjectParameter("tienePermiso", tienePermiso) :
                new ObjectParameter("tienePermiso", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarPerfilPermiso", perfilParameter, idPermisoParameter, codCarreraParameter, codEnfasisParameter, tienePermisoParameter);
        }
    
        public virtual int AgregarPlan(string nombre, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarPlan", nombreParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual int AgregarPreguntaConOpcion(string cod, string type, string enunciado, string justificacion)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var enunciadoParameter = enunciado != null ?
                new ObjectParameter("enunciado", enunciado) :
                new ObjectParameter("enunciado", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("justificacion", justificacion) :
                new ObjectParameter("justificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarPreguntaConOpcion", codParameter, typeParameter, enunciadoParameter, justificacionParameter);
        }
    
        public virtual int AgregarPreguntaEscalar(string cod, string type, string enunciado, string justificacion, Nullable<int> incremento, Nullable<int> minimo, Nullable<int> maximo)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var enunciadoParameter = enunciado != null ?
                new ObjectParameter("enunciado", enunciado) :
                new ObjectParameter("enunciado", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("justificacion", justificacion) :
                new ObjectParameter("justificacion", typeof(string));
    
            var incrementoParameter = incremento.HasValue ?
                new ObjectParameter("incremento", incremento) :
                new ObjectParameter("incremento", typeof(int));
    
            var minimoParameter = minimo.HasValue ?
                new ObjectParameter("minimo", minimo) :
                new ObjectParameter("minimo", typeof(int));
    
            var maximoParameter = maximo.HasValue ?
                new ObjectParameter("maximo", maximo) :
                new ObjectParameter("maximo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarPreguntaEscalar", codParameter, typeParameter, enunciadoParameter, justificacionParameter, incrementoParameter, minimoParameter, maximoParameter);
        }
    
        public virtual int AgregarPreguntaRespuestaLibre(string cod, string type, string enunciado)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var enunciadoParameter = enunciado != null ?
                new ObjectParameter("enunciado", enunciado) :
                new ObjectParameter("enunciado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarPreguntaRespuestaLibre", codParameter, typeParameter, enunciadoParameter);
        }
    
        public virtual int AgregarPreguntas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarPreguntas");
        }
    
        public virtual int AgregarSeccion(string codigo, string nombre)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarSeccion", codigoParameter, nombreParameter);
        }
    
        public virtual int AgregarUsuario(string pLogin, string pPassword, Nullable<bool> activo, ObjectParameter estado)
        {
            var pLoginParameter = pLogin != null ?
                new ObjectParameter("pLogin", pLogin) :
                new ObjectParameter("pLogin", typeof(string));
    
            var pPasswordParameter = pPassword != null ?
                new ObjectParameter("pPassword", pPassword) :
                new ObjectParameter("pPassword", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarUsuario", pLoginParameter, pPasswordParameter, activoParameter, estado);
        }
    
        public virtual int AgregarUsuarioPerfil(string usuario, string perfil, string codCarrera, string codEnfasis, Nullable<bool> tienePerfil)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("codCarrera", codCarrera) :
                new ObjectParameter("codCarrera", typeof(string));
    
            var codEnfasisParameter = codEnfasis != null ?
                new ObjectParameter("codEnfasis", codEnfasis) :
                new ObjectParameter("codEnfasis", typeof(string));
    
            var tienePerfilParameter = tienePerfil.HasValue ?
                new ObjectParameter("tienePerfil", tienePerfil) :
                new ObjectParameter("tienePerfil", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarUsuarioPerfil", usuarioParameter, perfilParameter, codCarreraParameter, codEnfasisParameter, tienePerfilParameter);
        }
    
        public virtual int AsociarPreguntaConSeccion(string codigoSeccion, string codigoPregunta, Nullable<int> orden)
        {
            var codigoSeccionParameter = codigoSeccion != null ?
                new ObjectParameter("CodigoSeccion", codigoSeccion) :
                new ObjectParameter("CodigoSeccion", typeof(string));
    
            var codigoPreguntaParameter = codigoPregunta != null ?
                new ObjectParameter("CodigoPregunta", codigoPregunta) :
                new ObjectParameter("CodigoPregunta", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsociarPreguntaConSeccion", codigoSeccionParameter, codigoPreguntaParameter, ordenParameter);
        }
    
        public virtual int AsociarSeccionConFormulario(string codigoFormulario, string codigoSeccion, Nullable<int> orden)
        {
            var codigoFormularioParameter = codigoFormulario != null ?
                new ObjectParameter("codigoFormulario", codigoFormulario) :
                new ObjectParameter("codigoFormulario", typeof(string));
    
            var codigoSeccionParameter = codigoSeccion != null ?
                new ObjectParameter("codigoSeccion", codigoSeccion) :
                new ObjectParameter("codigoSeccion", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("orden", orden) :
                new ObjectParameter("orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AsociarSeccionConFormulario", codigoFormularioParameter, codigoSeccionParameter, ordenParameter);
        }
    
        public virtual int BorrarAccionDeMejora(Nullable<int> codigoPlan, string nombreObj, string descripcion)
        {
            var codigoPlanParameter = codigoPlan.HasValue ?
                new ObjectParameter("codigoPlan", codigoPlan) :
                new ObjectParameter("codigoPlan", typeof(int));
    
            var nombreObjParameter = nombreObj != null ?
                new ObjectParameter("nombreObj", nombreObj) :
                new ObjectParameter("nombreObj", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarAccionDeMejora", codigoPlanParameter, nombreObjParameter, descripcionParameter);
        }
    
        public virtual int BorrarObjetivo(Nullable<int> codigoPlan, string nombreObj)
        {
            var codigoPlanParameter = codigoPlan.HasValue ?
                new ObjectParameter("codigoPlan", codigoPlan) :
                new ObjectParameter("codigoPlan", typeof(int));
    
            var nombreObjParameter = nombreObj != null ?
                new ObjectParameter("nombreObj", nombreObj) :
                new ObjectParameter("nombreObj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarObjetivo", codigoPlanParameter, nombreObjParameter);
        }
    
        public virtual int BorrarPlan(Nullable<int> codigoPlan)
        {
            var codigoPlanParameter = codigoPlan.HasValue ?
                new ObjectParameter("codigoPlan", codigoPlan) :
                new ObjectParameter("codigoPlan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarPlan", codigoPlanParameter);
        }
    
        public virtual int ChangePassword(string username, string newpassword)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var newpasswordParameter = newpassword != null ?
                new ObjectParameter("newpassword", newpassword) :
                new ObjectParameter("newpassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangePassword", usernameParameter, newpasswordParameter);
        }
    
        public virtual int CheckID(string identificacion, ObjectParameter result)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("identificacion", identificacion) :
                new ObjectParameter("identificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckID", identificacionParameter, result);
        }
    
        public virtual int DesviacionEstandarEscalar(string fCod, string cSigla, Nullable<byte> grupo, Nullable<int> gAnno, Nullable<byte> gSem, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string sCod, string pCod, ObjectParameter desviacion)
        {
            var fCodParameter = fCod != null ?
                new ObjectParameter("FCod", fCod) :
                new ObjectParameter("FCod", typeof(string));
    
            var cSiglaParameter = cSigla != null ?
                new ObjectParameter("CSigla", cSigla) :
                new ObjectParameter("CSigla", typeof(string));
    
            var grupoParameter = grupo.HasValue ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(byte));
    
            var gAnnoParameter = gAnno.HasValue ?
                new ObjectParameter("GAnno", gAnno) :
                new ObjectParameter("GAnno", typeof(int));
    
            var gSemParameter = gSem.HasValue ?
                new ObjectParameter("GSem", gSem) :
                new ObjectParameter("GSem", typeof(byte));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var sCodParameter = sCod != null ?
                new ObjectParameter("SCod", sCod) :
                new ObjectParameter("SCod", typeof(string));
    
            var pCodParameter = pCod != null ?
                new ObjectParameter("PCod", pCod) :
                new ObjectParameter("PCod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DesviacionEstandarEscalar", fCodParameter, cSiglaParameter, grupoParameter, gAnnoParameter, gSemParameter, fechaInicioParameter, fechaFinParameter, sCodParameter, pCodParameter, desviacion);
        }
    
        public virtual int EliminarPreguntaDeSeccion(string sCodigo, string pCodigo)
        {
            var sCodigoParameter = sCodigo != null ?
                new ObjectParameter("SCodigo", sCodigo) :
                new ObjectParameter("SCodigo", typeof(string));
    
            var pCodigoParameter = pCodigo != null ?
                new ObjectParameter("PCodigo", pCodigo) :
                new ObjectParameter("PCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarPreguntaDeSeccion", sCodigoParameter, pCodigoParameter);
        }
    
        public virtual int EliminarRespuestasDeFormulario(string codFormulario, string correo, string csigla, Nullable<byte> gnumero, Nullable<int> ganno, Nullable<byte> gsemestre)
        {
            var codFormularioParameter = codFormulario != null ?
                new ObjectParameter("codFormulario", codFormulario) :
                new ObjectParameter("codFormulario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var csiglaParameter = csigla != null ?
                new ObjectParameter("csigla", csigla) :
                new ObjectParameter("csigla", typeof(string));
    
            var gnumeroParameter = gnumero.HasValue ?
                new ObjectParameter("gnumero", gnumero) :
                new ObjectParameter("gnumero", typeof(byte));
    
            var gannoParameter = ganno.HasValue ?
                new ObjectParameter("ganno", ganno) :
                new ObjectParameter("ganno", typeof(int));
    
            var gsemestreParameter = gsemestre.HasValue ?
                new ObjectParameter("gsemestre", gsemestre) :
                new ObjectParameter("gsemestre", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarRespuestasDeFormulario", codFormularioParameter, correoParameter, csiglaParameter, gnumeroParameter, gannoParameter, gsemestreParameter);
        }
    
        public virtual int EliminarSeccionFormulario(string fCodigo, string sCodigo)
        {
            var fCodigoParameter = fCodigo != null ?
                new ObjectParameter("FCodigo", fCodigo) :
                new ObjectParameter("FCodigo", typeof(string));
    
            var sCodigoParameter = sCodigo != null ?
                new ObjectParameter("SCodigo", sCodigo) :
                new ObjectParameter("SCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarSeccionFormulario", fCodigoParameter, sCodigoParameter);
        }
    
        public virtual int GuardarOpcionesSeleccionadas(string codFormulario, string correo, string siglaCurso, Nullable<byte> numGrupo, Nullable<int> anno, Nullable<byte> semestre, Nullable<System.DateTime> fecha, string codPregunta, string codseccion, Nullable<byte> opcionSeleccionada)
        {
            var codFormularioParameter = codFormulario != null ?
                new ObjectParameter("codFormulario", codFormulario) :
                new ObjectParameter("codFormulario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("siglaCurso", siglaCurso) :
                new ObjectParameter("siglaCurso", typeof(string));
    
            var numGrupoParameter = numGrupo.HasValue ?
                new ObjectParameter("numGrupo", numGrupo) :
                new ObjectParameter("numGrupo", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var codPreguntaParameter = codPregunta != null ?
                new ObjectParameter("codPregunta", codPregunta) :
                new ObjectParameter("codPregunta", typeof(string));
    
            var codseccionParameter = codseccion != null ?
                new ObjectParameter("codseccion", codseccion) :
                new ObjectParameter("codseccion", typeof(string));
    
            var opcionSeleccionadaParameter = opcionSeleccionada.HasValue ?
                new ObjectParameter("opcionSeleccionada", opcionSeleccionada) :
                new ObjectParameter("opcionSeleccionada", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarOpcionesSeleccionadas", codFormularioParameter, correoParameter, siglaCursoParameter, numGrupoParameter, annoParameter, semestreParameter, fechaParameter, codPreguntaParameter, codseccionParameter, opcionSeleccionadaParameter);
        }
    
        public virtual int GuardarRespuestaAFormulario(string codFormulario, string correo, string siglaCurso, Nullable<byte> numGrupo, Nullable<int> anno, Nullable<byte> semestre, Nullable<System.DateTime> fecha)
        {
            var codFormularioParameter = codFormulario != null ?
                new ObjectParameter("codFormulario", codFormulario) :
                new ObjectParameter("codFormulario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("siglaCurso", siglaCurso) :
                new ObjectParameter("siglaCurso", typeof(string));
    
            var numGrupoParameter = numGrupo.HasValue ?
                new ObjectParameter("numGrupo", numGrupo) :
                new ObjectParameter("numGrupo", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarRespuestaAFormulario", codFormularioParameter, correoParameter, siglaCursoParameter, numGrupoParameter, annoParameter, semestreParameter, fechaParameter);
        }
    
        public virtual int GuardarRespuestaAPreguntaConOpciones(string codFormulario, string correo, string siglaCurso, Nullable<byte> numGrupo, Nullable<int> anno, Nullable<byte> semestre, Nullable<System.DateTime> fecha, string codPregunta, string codseccion, string justificacion)
        {
            var codFormularioParameter = codFormulario != null ?
                new ObjectParameter("codFormulario", codFormulario) :
                new ObjectParameter("codFormulario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("siglaCurso", siglaCurso) :
                new ObjectParameter("siglaCurso", typeof(string));
    
            var numGrupoParameter = numGrupo.HasValue ?
                new ObjectParameter("numGrupo", numGrupo) :
                new ObjectParameter("numGrupo", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var codPreguntaParameter = codPregunta != null ?
                new ObjectParameter("codPregunta", codPregunta) :
                new ObjectParameter("codPregunta", typeof(string));
    
            var codseccionParameter = codseccion != null ?
                new ObjectParameter("codseccion", codseccion) :
                new ObjectParameter("codseccion", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("justificacion", justificacion) :
                new ObjectParameter("justificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarRespuestaAPreguntaConOpciones", codFormularioParameter, correoParameter, siglaCursoParameter, numGrupoParameter, annoParameter, semestreParameter, fechaParameter, codPreguntaParameter, codseccionParameter, justificacionParameter);
        }
    
        public virtual int GuardarRespuestaAPreguntaLibre(string codFormulario, string correo, string siglaCurso, Nullable<byte> numGrupo, Nullable<int> anno, Nullable<byte> semestre, Nullable<System.DateTime> fecha, string codPregunta, string codseccion, string texto)
        {
            var codFormularioParameter = codFormulario != null ?
                new ObjectParameter("codFormulario", codFormulario) :
                new ObjectParameter("codFormulario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("siglaCurso", siglaCurso) :
                new ObjectParameter("siglaCurso", typeof(string));
    
            var numGrupoParameter = numGrupo.HasValue ?
                new ObjectParameter("numGrupo", numGrupo) :
                new ObjectParameter("numGrupo", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var codPreguntaParameter = codPregunta != null ?
                new ObjectParameter("codPregunta", codPregunta) :
                new ObjectParameter("codPregunta", typeof(string));
    
            var codseccionParameter = codseccion != null ?
                new ObjectParameter("codseccion", codseccion) :
                new ObjectParameter("codseccion", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarRespuestaAPreguntaLibre", codFormularioParameter, correoParameter, siglaCursoParameter, numGrupoParameter, annoParameter, semestreParameter, fechaParameter, codPreguntaParameter, codseccionParameter, textoParameter);
        }
    
        public virtual int InsertarCarreraCSV(string cod, string nombre)
        {
            var codParameter = cod != null ?
                new ObjectParameter("Cod", cod) :
                new ObjectParameter("Cod", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarCarreraCSV", codParameter, nombreParameter);
        }
    
        public virtual int InsertarCursoCSV(string sigla, string nombre)
        {
            var siglaParameter = sigla != null ?
                new ObjectParameter("Sigla", sigla) :
                new ObjectParameter("Sigla", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarCursoCSV", siglaParameter, nombreParameter);
        }
    
        public virtual int InsertarEmpadronadoEn(string correoEstudiante, string codCarrera, string codEnfasis)
        {
            var correoEstudianteParameter = correoEstudiante != null ?
                new ObjectParameter("CorreoEstudiante", correoEstudiante) :
                new ObjectParameter("CorreoEstudiante", typeof(string));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("CodCarrera", codCarrera) :
                new ObjectParameter("CodCarrera", typeof(string));
    
            var codEnfasisParameter = codEnfasis != null ?
                new ObjectParameter("CodEnfasis", codEnfasis) :
                new ObjectParameter("CodEnfasis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarEmpadronadoEn", correoEstudianteParameter, codCarreraParameter, codEnfasisParameter);
        }
    
        public virtual int InsertarEnfasisCSV(string codCarrera, string codigo, string nombre)
        {
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("CodCarrera", codCarrera) :
                new ObjectParameter("CodCarrera", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarEnfasisCSV", codCarreraParameter, codigoParameter, nombreParameter);
        }
    
        public virtual int InsertarEstudianteCSV(string correo)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarEstudianteCSV", correoParameter);
        }
    
        public virtual int InsertarFuncionarioCSV(string correo)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarFuncionarioCSV", correoParameter);
        }
    
        public virtual int InsertarGrupoCSV(string siglaCurso, Nullable<byte> numGrupo, Nullable<byte> semestre, Nullable<int> anno)
        {
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("SiglaCurso", siglaCurso) :
                new ObjectParameter("SiglaCurso", typeof(string));
    
            var numGrupoParameter = numGrupo.HasValue ?
                new ObjectParameter("NumGrupo", numGrupo) :
                new ObjectParameter("NumGrupo", typeof(byte));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("Semestre", semestre) :
                new ObjectParameter("Semestre", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("Anno", anno) :
                new ObjectParameter("Anno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarGrupoCSV", siglaCursoParameter, numGrupoParameter, semestreParameter, annoParameter);
        }
    
        public virtual int InsertarImparte(string correoProfesor, string siglaCurso, Nullable<byte> numGrupo, Nullable<byte> semestre, Nullable<int> anno)
        {
            var correoProfesorParameter = correoProfesor != null ?
                new ObjectParameter("CorreoProfesor", correoProfesor) :
                new ObjectParameter("CorreoProfesor", typeof(string));
    
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("SiglaCurso", siglaCurso) :
                new ObjectParameter("SiglaCurso", typeof(string));
    
            var numGrupoParameter = numGrupo.HasValue ?
                new ObjectParameter("NumGrupo", numGrupo) :
                new ObjectParameter("NumGrupo", typeof(byte));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("Semestre", semestre) :
                new ObjectParameter("Semestre", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("Anno", anno) :
                new ObjectParameter("Anno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarImparte", correoProfesorParameter, siglaCursoParameter, numGrupoParameter, semestreParameter, annoParameter);
        }
    
        public virtual int InsertarInscrita_En(string codUnidadAc, string codCarrera)
        {
            var codUnidadAcParameter = codUnidadAc != null ?
                new ObjectParameter("CodUnidadAc", codUnidadAc) :
                new ObjectParameter("CodUnidadAc", typeof(string));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("CodCarrera", codCarrera) :
                new ObjectParameter("CodCarrera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarInscrita_En", codUnidadAcParameter, codCarreraParameter);
        }
    
        public virtual int InsertarMatriculado_en(string correo, string sigla, Nullable<byte> numGrupo, Nullable<byte> semestre, Nullable<int> anno)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var siglaParameter = sigla != null ?
                new ObjectParameter("Sigla", sigla) :
                new ObjectParameter("Sigla", typeof(string));
    
            var numGrupoParameter = numGrupo.HasValue ?
                new ObjectParameter("NumGrupo", numGrupo) :
                new ObjectParameter("NumGrupo", typeof(byte));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("Semestre", semestre) :
                new ObjectParameter("Semestre", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("Anno", anno) :
                new ObjectParameter("Anno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarMatriculado_en", correoParameter, siglaParameter, numGrupoParameter, semestreParameter, annoParameter);
        }
    
        public virtual int InsertarPersonaCSV(string correo, string id, string nombre, string apellido, string tipoId, Nullable<bool> borrado)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var tipoIdParameter = tipoId != null ?
                new ObjectParameter("TipoId", tipoId) :
                new ObjectParameter("TipoId", typeof(string));
    
            var borradoParameter = borrado.HasValue ?
                new ObjectParameter("Borrado", borrado) :
                new ObjectParameter("Borrado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarPersonaCSV", correoParameter, idParameter, nombreParameter, apellidoParameter, tipoIdParameter, borradoParameter);
        }
    
        public virtual int InsertarPertenece_a(string codCarrera, string codEnfasis, string siglaCurso)
        {
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("CodCarrera", codCarrera) :
                new ObjectParameter("CodCarrera", typeof(string));
    
            var codEnfasisParameter = codEnfasis != null ?
                new ObjectParameter("CodEnfasis", codEnfasis) :
                new ObjectParameter("CodEnfasis", typeof(string));
    
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("SiglaCurso", siglaCurso) :
                new ObjectParameter("SiglaCurso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarPertenece_a", codCarreraParameter, codEnfasisParameter, siglaCursoParameter);
        }
    
        public virtual int InsertarProfesorCSV(string correo)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarProfesorCSV", correoParameter);
        }
    
        public virtual int InsertarTrabajaEn(string correoFuncionario, string codUnidadAcademica)
        {
            var correoFuncionarioParameter = correoFuncionario != null ?
                new ObjectParameter("CorreoFuncionario", correoFuncionario) :
                new ObjectParameter("CorreoFuncionario", typeof(string));
    
            var codUnidadAcademicaParameter = codUnidadAcademica != null ?
                new ObjectParameter("CodUnidadAcademica", codUnidadAcademica) :
                new ObjectParameter("CodUnidadAcademica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarTrabajaEn", correoFuncionarioParameter, codUnidadAcademicaParameter);
        }
    
        public virtual int InsertarUnidadCSV(string codUnidad, string nfacultad)
        {
            var codUnidadParameter = codUnidad != null ?
                new ObjectParameter("CodUnidad", codUnidad) :
                new ObjectParameter("CodUnidad", typeof(string));
    
            var nfacultadParameter = nfacultad != null ?
                new ObjectParameter("Nfacultad", nfacultad) :
                new ObjectParameter("Nfacultad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarUnidadCSV", codUnidadParameter, nfacultadParameter);
        }
    
        public virtual int LoginUsuario(string pLoginName, string pPassword, ObjectParameter result)
        {
            var pLoginNameParameter = pLoginName != null ?
                new ObjectParameter("pLoginName", pLoginName) :
                new ObjectParameter("pLoginName", typeof(string));
    
            var pPasswordParameter = pPassword != null ?
                new ObjectParameter("pPassword", pPassword) :
                new ObjectParameter("pPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoginUsuario", pLoginNameParameter, pPasswordParameter, result);
        }
    
        public virtual int Mediana(string codigoFormulario, string siglaCurso, Nullable<byte> numeroGrupo, Nullable<int> anio, Nullable<byte> semestre, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string codigoSeccion, string codigoPregunta, ObjectParameter mediana)
        {
            var codigoFormularioParameter = codigoFormulario != null ?
                new ObjectParameter("codigoFormulario", codigoFormulario) :
                new ObjectParameter("codigoFormulario", typeof(string));
    
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("siglaCurso", siglaCurso) :
                new ObjectParameter("siglaCurso", typeof(string));
    
            var numeroGrupoParameter = numeroGrupo.HasValue ?
                new ObjectParameter("numeroGrupo", numeroGrupo) :
                new ObjectParameter("numeroGrupo", typeof(byte));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var codigoSeccionParameter = codigoSeccion != null ?
                new ObjectParameter("codigoSeccion", codigoSeccion) :
                new ObjectParameter("codigoSeccion", typeof(string));
    
            var codigoPreguntaParameter = codigoPregunta != null ?
                new ObjectParameter("codigoPregunta", codigoPregunta) :
                new ObjectParameter("codigoPregunta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mediana", codigoFormularioParameter, siglaCursoParameter, numeroGrupoParameter, anioParameter, semestreParameter, fechaInicioParameter, fechaFinParameter, codigoSeccionParameter, codigoPreguntaParameter, mediana);
        }
    
        public virtual int ModificarCorreo(string anterior, string nuevo, ObjectParameter resultado)
        {
            var anteriorParameter = anterior != null ?
                new ObjectParameter("anterior", anterior) :
                new ObjectParameter("anterior", typeof(string));
    
            var nuevoParameter = nuevo != null ?
                new ObjectParameter("nuevo", nuevo) :
                new ObjectParameter("nuevo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarCorreo", anteriorParameter, nuevoParameter, resultado);
        }
    
        public virtual ObjectResult<ObtenerOpcionesDePregunta_Result> ObtenerOpcionesDePregunta(string questionCode)
        {
            var questionCodeParameter = questionCode != null ?
                new ObjectParameter("questionCode", questionCode) :
                new ObjectParameter("questionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerOpcionesDePregunta_Result>("ObtenerOpcionesDePregunta", questionCodeParameter);
        }
    
        public virtual ObjectResult<ObtenerOpcionesSeleccionadas_Result> ObtenerOpcionesSeleccionadas(string codFormulario, string correo, string sigla, Nullable<byte> num, Nullable<byte> semestre, Nullable<int> anno, string codSeccion, string codPregunta)
        {
            var codFormularioParameter = codFormulario != null ?
                new ObjectParameter("codFormulario", codFormulario) :
                new ObjectParameter("codFormulario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var siglaParameter = sigla != null ?
                new ObjectParameter("sigla", sigla) :
                new ObjectParameter("sigla", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(byte));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("codSeccion", codSeccion) :
                new ObjectParameter("codSeccion", typeof(string));
    
            var codPreguntaParameter = codPregunta != null ?
                new ObjectParameter("codPregunta", codPregunta) :
                new ObjectParameter("codPregunta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerOpcionesSeleccionadas_Result>("ObtenerOpcionesSeleccionadas", codFormularioParameter, correoParameter, siglaParameter, numParameter, semestreParameter, annoParameter, codSeccionParameter, codPreguntaParameter);
        }
    
        public virtual ObjectResult<ObtenerPreguntasDeSeccion_Result> ObtenerPreguntasDeSeccion(string sectionCode)
        {
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("sectionCode", sectionCode) :
                new ObjectParameter("sectionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerPreguntasDeSeccion_Result>("ObtenerPreguntasDeSeccion", sectionCodeParameter);
        }
    
        public virtual ObjectResult<ObtenerRespuestasAFormulario_Result> ObtenerRespuestasAFormulario(string codFormulario, string correo, string sigla, Nullable<byte> num, Nullable<int> anno, Nullable<byte> semestre)
        {
            var codFormularioParameter = codFormulario != null ?
                new ObjectParameter("codFormulario", codFormulario) :
                new ObjectParameter("codFormulario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var siglaParameter = sigla != null ?
                new ObjectParameter("sigla", sigla) :
                new ObjectParameter("sigla", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerRespuestasAFormulario_Result>("ObtenerRespuestasAFormulario", codFormularioParameter, correoParameter, siglaParameter, numParameter, annoParameter, semestreParameter);
        }
    
        public virtual ObjectResult<ObtenerRespuestasAPreguntaConOpciones_Result> ObtenerRespuestasAPreguntaConOpciones(string codFormulario, string correo, string sigla, Nullable<byte> num, Nullable<byte> semestre, Nullable<int> anno, string codSeccion, string codPregunta)
        {
            var codFormularioParameter = codFormulario != null ?
                new ObjectParameter("codFormulario", codFormulario) :
                new ObjectParameter("codFormulario", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var siglaParameter = sigla != null ?
                new ObjectParameter("sigla", sigla) :
                new ObjectParameter("sigla", typeof(string));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(byte));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var codSeccionParameter = codSeccion != null ?
                new ObjectParameter("codSeccion", codSeccion) :
                new ObjectParameter("codSeccion", typeof(string));
    
            var codPreguntaParameter = codPregunta != null ?
                new ObjectParameter("codPregunta", codPregunta) :
                new ObjectParameter("codPregunta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerRespuestasAPreguntaConOpciones_Result>("ObtenerRespuestasAPreguntaConOpciones", codFormularioParameter, correoParameter, siglaParameter, numParameter, semestreParameter, annoParameter, codSeccionParameter, codPreguntaParameter);
        }
    
        public virtual ObjectResult<ObtenerSeccionesDeFormulario_Result> ObtenerSeccionesDeFormulario(string codForm)
        {
            var codFormParameter = codForm != null ?
                new ObjectParameter("CodForm", codForm) :
                new ObjectParameter("CodForm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerSeccionesDeFormulario_Result>("ObtenerSeccionesDeFormulario", codFormParameter);
        }
    
        public virtual int PopularFormulariosConSecciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PopularFormulariosConSecciones");
        }
    
        public virtual int PopularFormulariosDePrueba()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PopularFormulariosDePrueba");
        }
    
        public virtual int PopularSeccionesConPreguntas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PopularSeccionesConPreguntas");
        }
    
        public virtual int PromedioRespuestasPreguntaEscalaNumerica(string codigoFormulario, string siglaCurso, Nullable<byte> numeroGrupo, Nullable<int> anno, Nullable<byte> semestre, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string codigoSeccion, string codigoPregunta, ObjectParameter promedio)
        {
            var codigoFormularioParameter = codigoFormulario != null ?
                new ObjectParameter("codigoFormulario", codigoFormulario) :
                new ObjectParameter("codigoFormulario", typeof(string));
    
            var siglaCursoParameter = siglaCurso != null ?
                new ObjectParameter("siglaCurso", siglaCurso) :
                new ObjectParameter("siglaCurso", typeof(string));
    
            var numeroGrupoParameter = numeroGrupo.HasValue ?
                new ObjectParameter("numeroGrupo", numeroGrupo) :
                new ObjectParameter("numeroGrupo", typeof(byte));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("semestre", semestre) :
                new ObjectParameter("semestre", typeof(byte));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var codigoSeccionParameter = codigoSeccion != null ?
                new ObjectParameter("codigoSeccion", codigoSeccion) :
                new ObjectParameter("codigoSeccion", typeof(string));
    
            var codigoPreguntaParameter = codigoPregunta != null ?
                new ObjectParameter("codigoPregunta", codigoPregunta) :
                new ObjectParameter("codigoPregunta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PromedioRespuestasPreguntaEscalaNumerica", codigoFormularioParameter, siglaCursoParameter, numeroGrupoParameter, annoParameter, semestreParameter, fechaInicioParameter, fechaFinParameter, codigoSeccionParameter, codigoPreguntaParameter, promedio);
        }
    
        public virtual int SugerirConfiguracion(string correoUsuario, ObjectParameter perfilPoderoso, ObjectParameter carreraPoderosa, ObjectParameter enfasisPoderoso)
        {
            var correoUsuarioParameter = correoUsuario != null ?
                new ObjectParameter("CorreoUsuario", correoUsuario) :
                new ObjectParameter("CorreoUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SugerirConfiguracion", correoUsuarioParameter, perfilPoderoso, carreraPoderosa, enfasisPoderoso);
        }
    
        public virtual int TienePerfilEnElEnfasis(string username, string perfil, string codCarrera, string codEnfasis, ObjectParameter tienePerfil)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("codCarrera", codCarrera) :
                new ObjectParameter("codCarrera", typeof(string));
    
            var codEnfasisParameter = codEnfasis != null ?
                new ObjectParameter("codEnfasis", codEnfasis) :
                new ObjectParameter("codEnfasis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TienePerfilEnElEnfasis", usernameParameter, perfilParameter, codCarreraParameter, codEnfasisParameter, tienePerfil);
        }
    
        public virtual int TienePermiso(string correoUsuario, string perfil, string codCarrera, string codEnfasis, Nullable<int> permiso, ObjectParameter resultado)
        {
            var correoUsuarioParameter = correoUsuario != null ?
                new ObjectParameter("correoUsuario", correoUsuario) :
                new ObjectParameter("correoUsuario", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("codCarrera", codCarrera) :
                new ObjectParameter("codCarrera", typeof(string));
    
            var codEnfasisParameter = codEnfasis != null ?
                new ObjectParameter("codEnfasis", codEnfasis) :
                new ObjectParameter("codEnfasis", typeof(string));
    
            var permisoParameter = permiso.HasValue ?
                new ObjectParameter("permiso", permiso) :
                new ObjectParameter("permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TienePermiso", correoUsuarioParameter, perfilParameter, codCarreraParameter, codEnfasisParameter, permisoParameter, resultado);
        }
    
        public virtual int TienePermisoActivoEnEnfasis(Nullable<int> permisoId, string perfil, string codCarrera, string codEnfasis, ObjectParameter tieneActivo)
        {
            var permisoIdParameter = permisoId.HasValue ?
                new ObjectParameter("permisoId", permisoId) :
                new ObjectParameter("permisoId", typeof(int));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("codCarrera", codCarrera) :
                new ObjectParameter("codCarrera", typeof(string));
    
            var codEnfasisParameter = codEnfasis != null ?
                new ObjectParameter("codEnfasis", codEnfasis) :
                new ObjectParameter("codEnfasis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TienePermisoActivoEnEnfasis", permisoIdParameter, perfilParameter, codCarreraParameter, codEnfasisParameter, tieneActivo);
        }
    
        public virtual int TienePermisoSinEnfasis(string correoUsuario, string perfil, string codCarrera, Nullable<int> permiso, ObjectParameter resultado)
        {
            var correoUsuarioParameter = correoUsuario != null ?
                new ObjectParameter("correoUsuario", correoUsuario) :
                new ObjectParameter("correoUsuario", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var codCarreraParameter = codCarrera != null ?
                new ObjectParameter("codCarrera", codCarrera) :
                new ObjectParameter("codCarrera", typeof(string));
    
            var permisoParameter = permiso.HasValue ?
                new ObjectParameter("permiso", permiso) :
                new ObjectParameter("permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TienePermisoSinEnfasis", correoUsuarioParameter, perfilParameter, codCarreraParameter, permisoParameter, resultado);
        }
    
        public virtual int TienePermisoSinEnfasisNiCarrera(string correoUsuario, string perfil, Nullable<int> permiso, ObjectParameter resultado)
        {
            var correoUsuarioParameter = correoUsuario != null ?
                new ObjectParameter("correoUsuario", correoUsuario) :
                new ObjectParameter("correoUsuario", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var permisoParameter = permiso.HasValue ?
                new ObjectParameter("permiso", permiso) :
                new ObjectParameter("permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TienePermisoSinEnfasisNiCarrera", correoUsuarioParameter, perfilParameter, permisoParameter, resultado);
        }
    
        public virtual int AgregarEnlaceSeguro(string usuarioAsociado, string urlReal, Nullable<System.DateTime> expira, ObjectParameter resultadohash, ObjectParameter estado)
        {
            var usuarioAsociadoParameter = usuarioAsociado != null ?
                new ObjectParameter("usuarioAsociado", usuarioAsociado) :
                new ObjectParameter("usuarioAsociado", typeof(string));
    
            var urlRealParameter = urlReal != null ?
                new ObjectParameter("urlReal", urlReal) :
                new ObjectParameter("urlReal", typeof(string));
    
            var expiraParameter = expira.HasValue ?
                new ObjectParameter("expira", expira) :
                new ObjectParameter("expira", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarEnlaceSeguro", usuarioAsociadoParameter, urlRealParameter, expiraParameter, resultadohash, estado);
        }
    
        public virtual int GetTeacherName(string correo, ObjectParameter nombreCompleto)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetTeacherName", correoParameter, nombreCompleto);
        }
    }
}
